syntax = "proto3";
option go_package = "./proto/";

message Empty {

}

message RoomRequest {
  string roomName = 1;
  ConnectionRequest initialConnectionRequest = 2;
};

message ListRoomResponse {
  repeated string roomNames = 1;
}

message ConnectionRequest {
  string serverID = 1;
  string username = 2;
}

// ChatMessage represents a message sent from user A to user B
message ChatMessage {
  string sender = 1; // the ID of the sender. Typically the username at the specific gateway
  string recipient = 2; // the ID of the recipient
  bytes content = 3;
  uint64 timestamp = 4;
}

service ChatService {
  rpc SendMessage(ChatMessage) returns (Empty); // send a message t oa given chat room
  rpc Subscribe(RoomRequest) returns (stream ChatMessage); // subscribe to a room
  rpc UnsubscribeAll(ConnectionRequest) returns (Empty); // unsubscribe from all rooms
  rpc ListRooms(Empty) returns (ListRoomResponse); // get all the rooms on the selected gateway
}